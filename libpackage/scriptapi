#!/bin/sh

communicate()
{
    # Nom de la communication
    str="[[>>|$1"
    
    # Paramètres
    shift
    
    while [ ${#1} -ne 0 ]; do
        str="$str|$1|$2"
        
        shift 2
    done
    
    str="$str|<<]]"
    /bin/echo "$str" >&2
    
    # Attendre une réponse, et l'échoer, ce qui permet d'attendre que l'utilisateur ait lu le message,
    # répondu à une question (et dans ce cas la réponse nous arrive), etc
    read rs
    echo "$rs"
}

gitco()
{
    cd "$2" &>/dev/null

    if [ ! $? -eq 0 ]; then
        git clone --depth 1 "$1" "$2"
    else
        rs="$(git pull)"

        if [ "$rs" = "Already up-to-date." ]; then
            # Tell automatic scripts that we are up-to-date (no need to rebuild)
            echo "SCM_UP_TO_DATE"
        fi
    fi
}

gitversion()
{
    (cd "$1" && git log --pretty=format:'%ai' -1 | cut -d ' ' -f 1 | sed -e 's/-//g')
}

svnco()
{
    cd "$2" &>/dev/null

    if [ ! $? -eq 0 ]; then
        svn co "$1" "$2"
    else
        rs="$(svn up | wc -l)"

        if [ "$rs" = "1" ]; then
            echo "SCM_UP_TO_DATE"
        fi
    fi
}

svnversion()
{
    (cd "$1" && svn info --xml | grep date | cut -d '>' -f 2 | cut -d 'T' -f 1 | sed -e 's/-//g')
}

# Run before every script in metadata.xml. We can here define some env vars
if [ "x$CFLAGS" = "x" ]; then
    # CFLAGS not already defined
    case "{{arch}}" in
        i686)
            export CFLAGS="-pipe -g1 -O2 -march=pentium3 -mtune=generic -msse -mfpmath=sse"
            ;;
        x86_64)
            export CFLAGS="-pipe -g1 -O2 -mtune=generic -msse -msse2 -mfpmath=sse -mno-3dnow"
            ;;
    esac
fi

if [ "x$CXXFLAGS" = "x" ]; then
    export CXXFLAGS="$CFLAGS"
fi
