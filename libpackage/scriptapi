#!/bin/sh

communicate()
{
    # Nom de la communication
    str="[[>>|$1"
    
    # Paramètres
    shift
    
    while [ ${#1} -ne 0 ]; do
        str="$str|$1|$2"
        
        shift 2
    done
    
    str="$str|<<]]"
    /bin/echo "$str" >&2
    
    # Attendre une réponse, et l'échoer, ce qui permet d'attendre que l'utilisateur ait lu le message,
    # répondu à une question (et dans ce cas la réponse nous arrive), etc
    read rs
    echo "$rs"
}

gitco()
{
    (cd "$2" && git pull)
    
    if [ ! $? -eq 0 ]; then
        git clone --depth 1 "$1" "$2"
    fi
}

gitversion()
{
    (cd "$1" && git log --pretty=format:'%ai' -1 | cut -d ' ' -f 1 | sed -e 's/-//g')
}

# lh_strip <dirs>
#
# example:
#
#    (cd "{{builddir}}" && lh_strip bin usr/bin usr/lib usr/share/app/plugins)
lh_strip()
{
    while [ "$1" != "" ]; do
        # Trouver les fichiers du dossier
        for f in $(find "$1" -type f); do
            # Si le fichier commence par /usr/lib/debug, le sauter
            case "$f" in
                *usr/lib/debug/*)
                    continue
                    ;;
                *)
                    # Essayer d'en extraire le debug
                    mkdir -p "usr/lib/debug/$(dirname "$f")"
                    objcopy --only-keep-debug "$f" "usr/lib/debug/$f.debug" > /dev/null 2>&1
                    
                    # Si objcopy a raté, c'est que le fichier n'était pas un fichier ELF
                    if [ "$?" != "0" ]; then
                        continue
                    fi

                    # Stripper le fichier
                    echo "Stripping $f ..."
                    strip --strip-debug "$f"
            esac
        done

        # Passer au dossier suivant
        shift
    done
}

# lh_installservice <service> [runlevel=default.runlevel]
#
# example:
#
#   lh_installservice daemon/dbus
#   lh_installservice system/udev system.virtual
lh_installservice() {
    if [ "x$2" == "x" ]; then
        runlevel="default.runlevel"
    else
        runlevel="$2"
    fi

    cat "{{instroot}}/etc/initng/runlevel/$runlevel" | grep "^$1\$" > /dev/null 2>&1

    if [ "$?" == "1" ]; then
        # Add the service to the runlever
        mkdir -p     "{{instroot}}/etc/initng/runlevel"
        echo "$1" >> "{{instroot}}/etc/initng/runlevel/$runlevel"
    fi
}

# lh_removeservice <service> [runlevel=default.runlevel]
#
# example:
#
#   lh_removeservice daemon/dbus
#   lh_removeservice system/udev system.virtual
lh_removeservice() {
    if [ "x$2" == "x" ]; then
        runlevel="default.runlevel"
    else
        runlevel="$2"
    fi

    sed -i -e "s#$1##g" "{{instroot}}/etc/initng/runlevel/$runlevel"
}

# Run before every script in metadata.xml. We can here define some env vars
if [ "x$CFLAGS" = "x" ]; then
    # CFLAGS not already defined
    case "{{arch}}" in
        i686)
            export CFLAGS="-g -O2 -march=pentium3 -mtune=generic -msse -mfpmath=sse"
            ;;
        x86_64)
            export CFLAGS="-g -O2 -mtune=generic -msse -msse2 -mfpmath=sse -mno-3dnow"
            ;;
    esac
fi

if [ "x$CXXFLAGS" = "x" ]; then
    export CXXFLAGS="$CFLAGS"
fi
